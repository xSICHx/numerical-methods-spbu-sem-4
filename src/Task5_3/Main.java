package Task5_3;

import Task5_2.QF_Methods.Gauss;
import org.mariuszgromada.math.mxparser.License;

import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        License.iConfirmNonCommercialUse("xSICHx");
        formalities();
        tests();

    }


    public static void tests(){
        CGaussUse cGauss = new CGaussUse(0, 1, 2, 100, 1e-12, "f(x) = exp(x)*sin(x)", "f(x) = 1/2 * exp(x) * (sin(x) - cos(x))", 0);
        Gauss gauss = new Gauss(0, 1, 2, 1e-12, "f(x) = exp(x)*sin(x)", "f(x) = 1/2 * exp(x) * (sin(x) - cos(x))");
        System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ã—á–Ω–æ–π –ö–§ –ì–∞—É—Å—Å–∞: " + gauss.getAbsError());
        System.out.println();

        cGauss = new CGaussUse(0, 1, 2, 3, 1e-12, "f(x) = exp(x)*sin(x)", "f(x) = 1/2 * exp(x) * (sin(x) - cos(x))", 0);
        System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ã—á–Ω–æ–π –ö–§ –ì–∞—É—Å—Å–∞: " + gauss.getAbsError());
        System.out.println();

        cGauss = new CGaussUse(0, 1, 5, 3, 1e-12, "f(x) = exp(x)*sin(x)", "f(x) = 1/2 * exp(x) * (sin(x) - cos(x))", 0);
        gauss = new Gauss(0, 1, 5, 1e-12, "f(x) = exp(x)*sin(x)", "f(x) = 1/2 * exp(x) * (sin(x) - cos(x))");
        System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ã—á–Ω–æ–π –ö–§ –ì–∞—É—Å—Å–∞: " + gauss.getAbsError());
        System.out.println();

        cGauss = new CGaussUse(0, 1, 5, 1, 1e-12, "f(x) = exp(x)*sin(x)", "f(x) = 1/2 * exp(x) * (sin(x) - cos(x))", 0);
        System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ã—á–Ω–æ–π –ö–§ –ì–∞—É—Å—Å–∞: " + gauss.getAbsError());
        System.out.println();

        cGauss.getBestParams();

    }


    public static void formalities(){
        System.out.println("""
                –ó–∞–¥–∞–Ω–∏–µ 5.3 –ø–æ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–º—É –ø—Ä–∞–∫—Ç–∏–∫—É–º—É.
                –ü—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Å–æ—Å—Ç–∞–≤–Ω–æ–π –ö–§ –ì–∞—É—Å—Å–∞.
                –í–∞—Ä–∏–∞–Ω—Ç 8
                [ùëé, ùëè] = [0, 1], ùëì(ùë•) = sin(ùë•), ùúå(ùë•) = ùëí^x
                """);
    }

    public static void myParameters(){
        System.out.println("–í–≤–µ–¥–∏—Ç–µ a, b, N, m");
        Scanner scanner = new Scanner(System.in);
        double a = scanner.nextDouble();
        double b = scanner.nextDouble();
        int N = scanner.nextInt();
        int m = scanner.nextInt();
        CGaussUse cGauss = new CGaussUse(a, b, N, m, 1e-12, "f(x) = exp(x)*sin(x)", "f(x) = 1/2 * exp(x) * (sin(x) - cos(x))", 1);
    }
}
